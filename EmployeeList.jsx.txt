function EmployeeSearch(){
    return (
        <div>
            <h2>Employee Search</h2>
        </div>
    )
}

function EmployeeTable({allEmployees}){

    const allEmployeeRows = allEmployees.map((employee) => (
        <EmployeeRow employee={employee}  /> 
    ));

    return (
        <div class="table-wrapper">
            <h2>Employee Directory</h2>
            <table>
                <thead>
                    <tr>
                        <th> FIRST NAME </th>
                        <th> LAST NAME </th>
                        <th> AGE </th>
                        <th> DATE OF JOINING </th>
                        <th> TITLE </th>
                        <th> DEPARTMENT </th>
                        <th> EMPLOYEE TYPE</th>
                        <th> CURRENT STATUS </th>
                    </tr>
                </thead>
                <tbody>
                    {allEmployeeRows}
                </tbody>
            </table>
        </div>
    )
}

function EmployeeRow({ employee }){
    return (
        <tr >
            <td> {employee.firstName} </td>
            <td> {employee.lastName} </td>
            <td> {employee.age} </td>
            <td> {new Date(parseInt(employee.dateOfJoining)).toLocaleDateString()} </td>
            <td> {employee.title} </td>
            <td> {employee.department} </td>
            <td> {employee.employeeType} </td>
            <td> {Number(employee.currentStatus)} </td>
        </tr>
    )
}

function EmployeeCreate({AddSingleEmployee}){

    const [errorMsg, setErrorMsg] = React.useState([]);

    const handleSubmit = async (e) => {
        e.preventDefault();
        let form = document.forms.addEmployee;
        console.log(form);
        const singleEmployee = {
            firstName: form.firstName.value,
            lastName: form.lastName.value,
            age: parseInt(form.age.value),
            dateOfJoining: form.dateOfJoining.value,
            title: form.title.value,
            department: form.department.value,
            employeeType: form.employeeType.value,
            currentStatus: true
        }

        if(form.title.value == "Employee" || form.title.value == "Manager" || form.title.value == "Director" || form.title.value == "VP"){
            setErrorMsg("Title should be one of: Employee / Manager / Director / VP");
        }

        if(form.department.value == "IT" || form.department.value == "Marketing" || form.department.value == "HR" || form.department.value == "Engineering"){
            setErrorMsg("Department should be one of: IT / Marketing / HR / Engineering");
        }

        if(form.employeeType.value == "Full Time" || form.employeeType.value == "Part Time" || form.employeeType.value == "Contract" || form.employeeType.value == "Seasonal"){
            setErrorMsg("Employee Type should be one of: Full Time / Part Time / Contract / Seasonal");
        }

        if(parseInt(form.age.value) < 20 || parseInt(form.age.value) > 70){
            setErrorMsg("Employee Age should be between 20 and 70");
        }

        console.log(singleEmployee);
        document.getElementById("addEmployee").reset();
        await AddSingleEmployee(singleEmployee);
    }

    return (
        <div>
            <h2>Add New Employee</h2>
            <form name = "addEmployee" id = "addEmployee" onSubmit={handleSubmit}>
                <label for="firstName">First Name:</label>
                <input type="text" id="firstName" name="firstName" placeholder="Enter the First Name" pattern="[A-Za-z ]{3,30}" title="First Name should be atleast 3 chars long" required/><br/><br/>
                <label for="lastName">Last Name:</label>
                <input type="text" id="lastName" name="lastName" placeholder="Enter the Last Name" pattern="[A-Za-z ]{3,30}" title="Last Name should be atleast 3 chars long" required/><br/><br/>
                <label for="age">Age:</label>
                <input type="number" id="age" name="age" placeholder="Enter the age" min="20" max ="70" required/><br/><br/>
                <label for="dateOfJoining">Date of Joining:</label>
                <input type="date" id="dateOfJoining" name="dateOfJoining" placeholder="Enter the Date of Joining" required/><br/><br/>
                <label for="title">Title:</label>
                <select name="title" id="title" required>
                    <option value="" hidden>Select the Title</option>
                    <option value="Employee">Employee</option>
                    <option value="Manager">Manager</option>
                    <option value="Director">Director</option>
                    <option value="VP">VP</option>
                </select>
                <br/><br/>
                <label for="department">Department:</label>
                <select name="department" id="department" required>
                    <option value="" hidden>Select the Department</option>
                    <option value="IT">IT</option>
                    <option value="Marketing">Marketing</option>
                    <option value="HR">HR</option>
                    <option value="Engineering">Engineering</option>
                </select>
                <br/><br/>
                <label for="employeeType">Employee Type:</label>
                <select name="employeeType" id="employeeType" required>
                    <option value="" hidden>Select the Employee Type</option>
                    <option value="Full Time">Full Time</option>
                    <option value="Part Time">Part Time</option>
                    <option value="Contract">Contract</option>
                    <option value="Seasonal">Seasonal</option>
                </select>
                <br/><br/>
                <button type="submit">Submit</button>
            </form> 
            <h4>{errorMsg}</h4>
        </div>
    )
}

const EmployeeDirectory = () => {

    const [allEmployees, setAllEmployees] = React.useState([]);

    let query = `
        query {
            employeeList {
            firstName
            lastName
            age
            dateOfJoining
            title
            department
            employeeType
            currentStatus
            }
        }
    `;

    function fetchEmployeeData(){
        fetch('/graphql', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json'},
            body: JSON.stringify({ query })
        }).then(async (response)=> {
            let tempEmployees = await response.json();
            let tempList = tempEmployees.data.employeeList;
            console.log(tempEmployees);
            setAllEmployees(tempList);

            let error = await response.error();
            setErrorMsg(error);
        })
    }

    React.useEffect(function(){
        fetchEmployeeData();
    },[]);

    const AddSingleEmployee = (singleEmployee) => {

        let query = `
            mutation AddNewEmployeeToDB($firstName: String!, $lastName: String!, $title: String!, $department: String!, $employeeType: String!, $age: Int, $dateOfJoining: String!) {
                addNewEmployeeToDB(firstName: $firstName, lastName: $lastName, title: $title, department: $department, employeeType: $employeeType, age: $age, dateOfJoining: $dateOfJoining) {
                firstName
                lastName
                age
                dateOfJoining
                title
                department
                employeeType
                currentStatus
                }
            }
        `;

        fetch('/graphql', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json'},
            body: JSON.stringify({ query, variables: {firstName: singleEmployee.firstName, lastName: singleEmployee.lastName, age: singleEmployee.age, dateOfJoining: singleEmployee.dateOfJoining, title: singleEmployee.title, department: singleEmployee.department, employeeType: singleEmployee.employeeType} })
        }).then(async (response)=> {
            const temp = response.json();
            console.log(temp);
            fetchEmployeeData();
        })
    }

    return (
        <div>
            <div class="grid-container">
                <div>
                    <EmployeeTable allEmployees = {allEmployees} />
                </div>
                <div>
                    <EmployeeCreate AddSingleEmployee = {AddSingleEmployee}/>
                </div>
            </div>
            {/* <div>
                <EmployeeSearch />
            </div> */}
        </div>
    )
}

const element = ReactDOM.createRoot(document.getElementById("root-1"));
element.render(<EmployeeDirectory/>);